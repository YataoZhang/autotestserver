// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  uid       String    @unique @db.VarChar(128)
  username  String    @unique @db.VarChar(255)
  password  String    @db.VarChar(255)
  create_at DateTime  @db.DateTime(0)
  teams     Member[]
  Plan      Plan[]
  Case      Case[]
  History   History[]
  Team      Team[]

  @@index([username])
}

model Team {
  id      Int      @id @default(autoincrement())
  name    String   @unique @db.VarChar(255)
  delete  Boolean  @default(false)
  user    User     @relation(fields: [ownerId], references: [id])
  ownerId Int
  users   Member[]
  Plan    Plan[]
}

model Member {
  id       Int     @id @default(autoincrement())
  user     User    @relation(fields: [userId], references: [id])
  userId   Int
  team     Team    @relation(fields: [teamId], references: [id])
  teamId   Int
  nickname String  @db.VarChar(255)
  status   Int     @default(1)
  delete   Boolean @default(false)
}

model Plan {
  id          Int       @id @default(autoincrement())
  name        String    @unique @db.VarChar(255)
  type        Int       @default(1)
  status      Int       @default(1)
  user        User      @relation(fields: [creator], references: [id])
  creator     Int
  team        Team      @relation(fields: [teamId], references: [id])
  teamId      Int
  delete      Boolean   @default(false)
  create_at   DateTime  @db.DateTime(0)
  modified_at DateTime  @db.DateTime(0)
  Case        Case[]
  History     History[]
}

model Case {
  id               Int                @id @default(autoincrement())
  name             String             @unique @db.VarChar(255)
  status           Int                @default(1)
  user             User               @relation(fields: [creator], references: [id])
  creator          Int
  plan             Plan               @relation(fields: [planId], references: [id])
  planId           Int
  delete           Boolean            @default(false)
  content          Json?              @db.Json()
  mrd              String?            @db.LongText
  create_at        DateTime           @db.DateTime(0)
  modified_at      DateTime           @db.DateTime(0)
  HistoriesOnCases HistoriesOnCases[]
}

model History {
  id               Int                @id @default(autoincrement())
  start_at         DateTime           @db.DateTime(0)
  end_at           DateTime?          @db.DateTime(0)
  status           Int                @default(0)
  user             User               @relation(fields: [triggerId], references: [id])
  triggerId        Int
  plan             Plan               @relation(fields: [planId], references: [id])
  planId           Int
  info             Json?              @db.Json()
  reporter_link    String?            @db.VarChar(255)
  detail_link      String?            @db.VarChar(255)
  compare_link     String?            @db.VarChar(255)
  taskid           String?            @db.VarChar(255)
  result           Json?              @db.Json()
  HistoriesOnCases HistoriesOnCases[]
}

model HistoriesOnCases {
  id        Int     @id @default(autoincrement())
  case      Case    @relation(fields: [caseId], references: [id])
  caseId    Int
  history   History @relation(fields: [historyId], references: [id])
  historyId Int
}
